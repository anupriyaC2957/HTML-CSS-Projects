*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html{
    font-size: 62.5%;
    /* 1rem = 16px by default and I want to reduce its 
    size to 10px so for that the font size needs to be 
    reduced to 62.5%  */

}

.flower{
    width:100%;
    height: 100vh;
    /* The viewport is the visible area of a webpage on your 
    screen, and height: 100vh; makes an element take up the 
    full vertical space of that visible area. */
    background-color: #dfc79c;
    /* Creates a flex container for all its child element */
    display: flex;
    justify-content: center;
    /* horizontal --> child--> center */
    align-items: center;
    /* virtically --> child -->center */
    perspective: 100rem;
    /* 100rem is depth */
}   

.petals{
    height: 40rem;
    aspect-ratio: 1;
    position: relative;
    /* The positioning context for the child .petal elements 
    will be relative to the .petals container.*/
    transform-style: preserve-3d;
    /* The children to the container will preserve the 3-d form*/
    transform: rotateX(50deg);
}

.petal{
    width: 15rem;
    aspect-ratio: 1;
    position: absolute;
     /* positioned relative to its nearest positioned ancestor 
     with a value other than static. In this case, the nearest
    ancestor is the .petals container.*/
    top:5rem;
    left: 5rem;
    transform-origin: bottom right;

/*Using transform: skew(23deg, 23deg)rotateZ(30deg) here it will change 
the shape of the petal.... hence use .petal::before */

}

.petal::before{
    content: '';
    width: 100%;
    height: 100%;
    position: absolute;
    background: linear-gradient(#5f7acb,#a65ac2, #aa12ac);
    border-radius: 50% 50% 0 50%;
    transform: skew(23deg, 23deg);
/*transform: skew(23deg, 23deg) skew is transformation to an
 element, distorting it by tilting along the horizontal and/
 or vertical axes  */
    box-shadow: 0.9rem 0.9rem 0rem 0.9rem #0a0a0a;
    transform-origin: bottom right;
}

.petal:nth-child(1){
    transform: rotateZ(0deg);
}
.petal:nth-child(2){
    transform: rotateZ(30deg);
    
}
.petal:nth-child(3){
    transform: rotateZ(60deg);
}
.petal:nth-child(4){
    transform: rotateZ(90deg);
     
}
.petal:nth-child(5){
    transform: rotateZ(120deg);
}
.petal:nth-child(6){
    transform: rotateZ(150deg);
    
}
.petal:nth-child(7){
    transform: rotateZ(180deg);
}
.petal:nth-child(8){
    transform: rotateZ(210deg);
    
}
.petal:nth-child(9){
    transform: rotateZ(240deg);
}
.petal:nth-child(10){
    transform: rotateZ(270deg);
    
}
.petal:nth-child(11){
    transform: rotateZ(300deg);

}
.petal:nth-child(12){
    transform: rotateZ(330deg);

}

.circle {
    width: 5rem;
    height: 5rem;
    background: linear-gradient(#e76655,#f2f205, #f6a504);
    position:absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);  
    border-radius: 50%;
    /* The translate() is used to horizontally and vertically center an element
    within its containing parent
    both the translateX and translateY components
    mean that the element will be moved back by half of its own width
    and half of its own height. */

    border: 0.7rem solid #0a0a0a;   
}

.stem{
    position: absolute;
    width:2rem;
    height: 40.86rem;
    background: linear-gradient(#0d5623,#188d54, #167313);
    transform: translateY(50%) rotateZ(7deg);
    transform-origin: top;
    z-index:-1;
   

    
}